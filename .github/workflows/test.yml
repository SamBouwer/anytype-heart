on: [push]
name: Test
jobs:
  unit-test:
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      - name: Setup GO
        run: |
          echo GOPATH=$(go env GOPATH) >> $GITHUB_ENV
          echo GOBIN=$(go env GOPATH)/bin >> $GITHUB_ENV
          echo $(go env GOPATH)/bin >> $GITHUB_PATH
      - name: Generate mocks
        run: |
            go install github.com/golang/mock/mockgen@latest
            go generate ./...
      - name: Go test
        run: |
          export ANYTYPE_LOG_LEVEL=DEBUG
          export ANYTYPE_LOG_NOGELF=1
          go install gotest.tools/gotestsum@latest
          PACKAGE_NAMES=$(go list -tags nogrpcserver ./... | grep -v "github.com/anyproto/anytype-heart/cmd/grpserver" | grep -v "github.com/anyproto/anytype-heart/clientlibrary/clib")
          mkdir ~/gotestsum-report
          gotestsum --junitfile ~/gotestsum-report/gotestsum-report.xml --  -tags nogrpcserver -p 1 $PACKAGE_NAMES
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '~/gotestsum-report/gotestsum-report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
